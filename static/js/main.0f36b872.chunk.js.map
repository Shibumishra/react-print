{"version":3,"sources":["Print.js","App.js","reportWebVitals.js","index.js"],"names":["ComponentToPrint","style","fontSize","color","React","PureComponent","Example","componentRef","useRef","handlePrint","useReactToPrint","content","current","ref","display","justifyContent","marginTop","padding","backgroundColor","outline","overflow","border","borderRadius","cursor","onClick","App","className","Print","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAGaA,EAAb,4JACI,WACE,OACE,gCACA,qBAAKC,MAAO,CAAEC,SAAU,OAAQC,MAAO,SAAvC,woBAYA,qBAAKF,MAAO,CAAEE,MAAO,QAArB,61BAhBR,GAAsCC,IAAMC,eAoD7BC,EAhBG,WACd,IAAMC,EAAeC,mBACfC,EAAcC,0BAAgB,CAClCC,QAAS,kBAAMJ,EAAaK,WAG9B,OACE,gCACE,cAAC,EAAD,CAAkBC,IAAKN,IACvB,qBAAKN,MAAO,CAACa,QAAS,OAAQC,eAAgB,SAAUC,UAAW,QAAnE,SACA,wBAAQf,MAAO,CAACgB,QAAS,OAAQC,gBAAiB,UAAWf,MAAO,OAAQgB,QAAS,OAAQC,SAAU,SAAUC,OAAQ,OAAQC,aAAc,OAAQC,OAAQ,UAAWrB,SAAU,QAASsB,QAASf,EAAtM,mCCtCOgB,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACG,cAACC,EAAD,OCMQC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0f36b872.chunk.js","sourcesContent":["import React, { useRef } from 'react';\r\nimport { useReactToPrint } from 'react-to-print';\r\n\r\nexport class ComponentToPrint extends React.PureComponent {\r\n    render() {\r\n      return (\r\n        <div>\r\n        <div style={{ fontSize: \"30px\", color: \"green\" }}>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Pretium\r\n          viverra suspendisse potenti nullam ac tortor vitae purus faucibus. Eu\r\n          lobortis elementum nibh tellus. Urna molestie at elementum eu\r\n          facilisis sed odio morbi quis. Et molestie ac feugiat sed lectus\r\n          vestibulum mattis ullamcorper. Ut tellus elementum sagittis vitae et.\r\n          Leo urna molestie at elementum. Vestibulum rhoncus est pellentesque\r\n          elit ullamcorper dignissim. Sollicitudin nibh sit amet commodo nulla\r\n          facilisi. Amet luctus venenatis lectus magna. Ultricies integer quis\r\n          auctor elit sed vulputate mi.\r\n        </div>\r\n        <div style={{ color: \"blue\" }}>\r\n          Characteristics of active learning 1. You look for ways of being more\r\n          involved in what you are learning. 2. You are engaged in the whole\r\n          learning process (and in a position to see why information has been\r\n          selected). 3. You look for links between different things that you\r\n          discover. 4. You make a conscious effort to make sense of, and find\r\n          meaning in, what you learn. Understanding is usually deeper. 5. You\r\n          are involved in reflection and self-evaluation. 6. Your attention span\r\n          is longer because your mind is more fully engaged. 7. Long-term memory\r\n          is assisted. If you understand what you learn, and keep relating what\r\n          you learn to what you already know, you are more likely to remember\r\n          what you have learnt. 8. Linking information helps you to see how you\r\n          can apply it to different situations. 9. Learning is personalised and\r\n          interesting.\r\n        </div>\r\n      </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  const Example = () => {\r\n    const componentRef = useRef();\r\n    const handlePrint = useReactToPrint({\r\n      content: () => componentRef.current,\r\n    });\r\n  \r\n    return (\r\n      <div>\r\n        <ComponentToPrint ref={componentRef} />\r\n        <div style={{display: \"flex\", justifyContent: \"center\", marginTop: \"20px\"}}>\r\n        <button style={{padding: \"16px\", backgroundColor: \"#66ff1a\", color: \"#000\", outline: \"none\", overflow: \"hidden\", border: \"none\", borderRadius: \"10px\", cursor: \"pointer\", fontSize: \"28px\"}} onClick={handlePrint}>Print this out!</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default Example;","import React from 'react';\nimport Print from './Print';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Print />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}